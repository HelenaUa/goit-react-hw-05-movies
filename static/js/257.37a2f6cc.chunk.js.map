{"version":3,"file":"static/js/257.37a2f6cc.chunk.js","mappings":"yQAEaA,E,OAAaC,GAAAA,OAAH,8H,SCuEvB,EAlEqB,WAAO,IAAD,IAEjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAU,qBADCC,EAAAA,EAAAA,MACWC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAErCC,EAAG,mCARgB,wCAUzB,6GAE2BC,EAAAA,EAAAA,IAAA,6CAAgDV,EAAhD,oBAAmES,EAAnE,oBAF3B,OAEUE,EAFV,OAGIP,EAASO,EAASC,MAHtB,gDAIIC,QAAQC,IAAR,MAJJ,0DAVyB,sBA+BzB,OAZAC,EAAAA,EAAAA,YAAU,YAnBe,mCAuBvBC,EAED,GAAE,CAAChB,KAOF,iCACE,SAAC,KAAD,CAAMiB,GAAIZ,EAAV,UAAsB,SAACP,EAAD,yBAEtB,4BACE,gBAAKoB,IAAG,0CAAqCf,EAAMgB,aAAeC,IAAKjB,EAAMkB,kBAC7E,4BACE,wBAAKlB,EAAMkB,kBACX,wCAAgBlB,EAAMmB,aAAtB,QACA,sCACA,uBAAInB,EAAMoB,YACV,oCACA,uBACGpB,EAAMqB,gBAKb,4BACG,mDACH,2BACE,yBACE,SAAC,KAAD,CAAMP,GAAE,kBAAajB,EAAb,SAAR,qBAEF,yBACE,SAAC,KAAD,CAAMiB,GAAE,kBAAajB,EAAb,YAAR,2BAGJ,SAAC,KAAD,SAKL,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonBack = styled.button`\npadding: 4px;\nmargin: 25px 15px;\n &.active {\n   color: orangered;\n   background-color: white;\n  }`","// import PropTypes from 'prop-types';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { ButtonBack } from './MovieDetails.styled';\n\n\nconst MovieDetails = () => {\n\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  // const [data, setData] = useState([]);\n  const location = useLocation();\n  const goBackLink = location.state?.from ?? \"/\";\n\n  const KEY = `faab19b092cac6c59a97dec233a38f4d`;\n\n  async function fetchFullInfoMovie () {\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`);\n      setMovie(response.data) } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  useEffect(() => {\n    // if (data === []) {\n    //   return;\n    // }\n    fetchFullInfoMovie();\n     // eslint-disable-next-line\n  }, [movieId]);\n\n  // useEffect(() => {\n  // HTTP запрос, если нужно\n  // }, [])\n\n  return (\n    <>\n      <Link to={goBackLink}><ButtonBack>Go back</ButtonBack></Link>\n      {/* <p>MovieDetails: {movieId}</p> */}\n      <div>\n        <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.original_title} />\n        <div>\n          <h2>{movie.original_title}</h2>\n          <p>User score: {movie.vote_average}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {movie.genres}\n          </p>\n        </div>\n      </div>\n\n      <div>\n         <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n        </li>\n        <li>\n          <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n      </div>\n      \n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["ButtonBack","styled","movieId","useParams","useState","movie","setMovie","goBackLink","useLocation","state","from","KEY","axios","response","data","console","log","useEffect","fetchFullInfoMovie","to","src","poster_path","alt","original_title","vote_average","overview","genres"],"sourceRoot":""}